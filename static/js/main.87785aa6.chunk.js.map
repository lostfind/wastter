{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Wastes.js","components/WastesFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","newAccount","setNewAccount","error","setError","email","setEmail","password","setPassword","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","currentUser","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Wastes","wastesObj","isOwner","editing","setEditing","text","newWastes","setNewWastes","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","width","height","alt","WastesFactory","userObj","waste","setWaste","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","result","readAsDataURL","Home","wastes","setWastes","useEffect","onSnapshot","snapshot","wasteArray","docs","map","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","getMyWateses","where","orderBy","get","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","user","onAuthStateChanged","args","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87785aa6.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { authService } from \"fbase\";\nimport { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n      authService.currentUser = data;\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n      </form>\n      <div>{error}</div>\n      <span onClick={toggleAccount}>\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return (\n    <div>\n      <AuthForm />\n      <div>\n        <button onClick={onSocialClick} name=\"google\">\n          Continue for Google\n        </button>\n        <button onClick={onSocialClick} name=\"github\">\n          Continue for Github\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import { dbService, storageService } from \"fbase\";\nimport { useState } from \"react\";\n\nconst Wastes = ({ wastesObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newWastes, setNewWastes] = useState(wastesObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure want to delete?\");\n    if (ok) {\n      await dbService.doc(`wastes/${wastesObj.id}`).delete();\n      await storageService.refFromURL(wastesObj.attachmentUrl).delete();\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    console.log(wastesObj, newWastes);\n    await dbService.doc(`wastes/${wastesObj.id}`).update({ text: newWastes });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    setNewWastes(event.target.value);\n  };\n\n  return (\n    <div>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input\n              type=\"text\"\n              placeholder=\"Edit your wastes\"\n              value={newWastes}\n              required\n              onChange={onChange}\n            />\n            <input type=\"submit\" value=\"Update Wates\" />\n          </form>\n          <button onClick={toggleEditing}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h4>{wastesObj.text}</h4>\n          {wastesObj.attachmentUrl && (\n            <img\n              src={wastesObj.attachmentUrl}\n              width=\"50px\"\n              height=\"50px\"\n              alt=\"\"\n            />\n          )}\n          {isOwner && (\n            <>\n              <button onClick={onDeleteClick}>Delete wastes</button>\n              <button onClick={toggleEditing}>Edit wastes</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Wastes;\n","import { dbService, storageService } from \"fbase\";\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst WastesFactory = ({ userObj }) => {\n  const [waste, setWaste] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onChange = (event) => {\n    setWaste(event.target.value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      setAttachment(finishedEvent.currentTarget.result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(null);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(` ${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const wastesObj = {\n      text: waste,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"wastes\").add(wastesObj);\n    setWaste(\"\");\n    setAttachment(\"\");\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        value={waste}\n        onChange={onChange}\n        type=\"text\"\n        placeholder=\"Input your waste\"\n        maxLength={120}\n      />\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n      <input type=\"submit\" value=\"Wastteed\" />\n      {attachment && (\n        <div>\n          <img src={attachment} width=\"50px\" height=\"50px\" alt=\"\" />\n          <button onClick={onClearAttachment}>Clear</button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default WastesFactory;\n","import Wastes from \"components/Wastes\";\nimport { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport WastesFactory from \"components/WastesFactory\";\n\nconst Home = ({ userObj }) => {\n  const [wastes, setWastes] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"wastes\").onSnapshot((snapshot) => {\n      const wasteArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setWastes(wasteArray);\n    });\n  }, []);\n\n  return (\n    <div>\n      <WastesFactory userObj={userObj} />\n      <div>\n        {wastes.map((waste) => (\n          <Wastes\n            key={waste.id}\n            wastesObj={waste}\n            isOwner={waste.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onChange = (event) => {\n    setNewDisplayName(event.target.value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  const getMyWateses = async () => {\n    const wasteses = await dbService\n      .collection(\"wastes\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n  };\n\n  useEffect(() => {\n    getMyWateses();\n  }, []);\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          onChange={onChange}\n          value={newDisplayName}\n          placeholder=\"Display name\"\n        />\n        <input type=\"submit\" value=\"Update\" />\n      </form>\n      <button onClick={onLogOutClick}>Logout</button>\n    </>\n  );\n};\n\nexport default Profile;\n","import { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul>\n      <li>\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li>\n        <Link to=\"/profile\">{userObj.displayName}'s Profile</Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  const user = authService.currentUser;\n  const refreshUser = () => {\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}